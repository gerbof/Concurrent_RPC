/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _SUMADOR_H_RPCGEN
#define _SUMADOR_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct numbers_result {
	int max;
	int min;
};
typedef struct numbers_result numbers_result;

struct id_number {
	int value;
	int old_value;
	pid_t pID;
};
typedef struct id_number id_number;

typedef struct {
	u_int iarray_len;
	int *iarray_val;
} iarray;

#define SUMADOR_MAXMIN_PROG 0x20000001
#define SUMADOR_MAXMIN_VERSION 1

#if defined(__STDC__) || defined(__cplusplus)
#define VMAXMIN 1
extern  numbers_result * vmaxmin_1(iarray *, CLIENT *);
extern  numbers_result * vmaxmin_1_svc(iarray *, struct svc_req *);
#define SUMA 2
extern  int * suma_1(id_number *, CLIENT *);
extern  int * suma_1_svc(id_number *, struct svc_req *);
extern int sumador_maxmin_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define VMAXMIN 1
extern  numbers_result * vmaxmin_1();
extern  numbers_result * vmaxmin_1_svc();
#define SUMA 2
extern  int * suma_1();
extern  int * suma_1_svc();
extern int sumador_maxmin_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_numbers_result (XDR *, numbers_result*);
extern  bool_t xdr_id_number (XDR *, id_number*);
extern  bool_t xdr_iarray (XDR *, iarray*);

#else /* K&R C */
extern bool_t xdr_numbers_result ();
extern bool_t xdr_id_number ();
extern bool_t xdr_iarray ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_SUMADOR_H_RPCGEN */
